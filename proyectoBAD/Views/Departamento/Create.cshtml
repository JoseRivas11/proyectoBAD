@model proyectoBAD.ViewModels.DepartamentoViewModel

@{
    ViewBag.Title = "Admon. Instituciones";
}

@section customStyles{
    @Styles.Render("~/bundles/dataTableStyles")
}

<div class="col-md-12">
    @using (Html.BeginForm((String)ViewBag.Action, "Departamento", FormMethod.Post, htmlAttributes: new { role = "form", @class = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Departamentos</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
            @if (ViewBag.Button == "Editar")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <p class="form-control-static">
                            @Html.DisplayFor(model => model.id)
                            @Html.HiddenFor(model => model.id)
                        </p>
                    </div>
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email_contacto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.email_contacto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.email_contacto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.institucion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                   @Html.DropDownListFor(model => model.idInst, Model.instituciones, "Seleccionar...",
       htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.idInst, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="col-md-12">
            <div class="row">
                <h3>Usuarios bloqueados</h3>
            </div>

            <div class="row">
                <div class="col-md-3 col-md-offset-9">
                    <a class="btn btn-primary pull-right" data-toggle="modal" data-target="#modalEmpleados">
                    <i class="fa fa-fw fa-plus"></i> Agregar</a>
                </div>
            </div>
            <hr />
            <div class="row">
               
                    <table class="table table-striped table-bordered table-hover table-condesed" id="tableEmp">
                        <thead>
                            <tr role="row">
                                <th>Nombre Empleado</th>
                                <th>Empresa</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.empleados.Count > 0)
                            {

                                for (int i = 0; i < Model.empleados.Count; i++)
                                {
                                    <tr role="row">
                                        <td>@Html.DisplayFor(item => Model.empleados[i].nombre_completo)</td>
                                        <td>@Html.DisplayFor(item => Model.empleados[i].empresas.nombre)</td>
                                        <td>
                                            <a title="" class="btn btn-primary btn-xs action deleteLink"
                                               data-original-title="Borrar" data-toggle="tooltip" data-placement="top">
                                                <i class="fa fa-fw fa-trash"></i>
                                            </a>
                                        </td>
                                        @Html.Hidden("empleados.Index", i)
                                        @Html.HiddenFor(item => Model.empleados[i].email)
                                    </tr>
                                }

                            }
                        </tbody>
                    </table>
                    <h5 id="message">No existen empleados bloqueados</h5>

            </div>
        </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@ViewBag.Button" class="btn btn-primary" />
                </div>
            </div>
            </div>
    }

    <div>
        <a href="@Url.Action("Index", "Departamento")" class="btn btn-default">
            <i class="fa fa-fw fa-arrow-left"></i>Volver a la lista de departamentos
        </a>
    </div>
        <div id="modalEmpleados" class="modal fade" role="dialog" aria-hidden="true" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form role="form" class="form-inline ">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Empleados</h4>
                        </div>

                        @{ string idEmpresa = "", idEmpleado = "";}

                        <div class="modal-body">
                            <div class="form-group">
                                <label>Empresa: </label>
                                <div class="col-md-10">
                                    @Html.DropDownListFor(x => idEmpresa, Model.empresas, "Seleccionar...",
                                htmlAttributes: new { @class = "form-control", id = "ddEmpresa" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Empleado: </label>
                                <div class="col-md-10">
                                    @Html.DropDownListFor(x => idEmpleado, new SelectList(String.Empty, "Value", "Text"), "Seleccionar...",
                                htmlAttributes: new { @class = "form-control", id = "ddEmpleados" })
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <input id="btnAddEmp" type="button" class="btn btn-primary" value="Agregar" data-dismiss="modal" />
                        </div>

                    </form>
                    
                </div>
            </div>
        </div>
</div>
@section customScripts{
    @Scripts.Render("~/bundles/formValidationScripts")
    <script type="text/javascript">
        $(document).ready(function () {
            if ($("#tableEmp tbody tr").length <= 0) {
                $("#tableEmp thead").hide();
            }
            else {
                $("#message").hide();
            }

            $(".action").tooltip({
                container: "body"
            });
            //Dropdownlist Selectedchange event  
                    $("#ddEmpresa").change(function  ()  {
                        $("#ddEmpleados").empty();
                            $.ajax({
                                    type:  'POST',
                                    url:  '@Url.Action("getEmpleados")', // we are calling json method  

                                    dataType:  'json',

                                    data:  {  idEmpresa :  $("#ddEmpresa").val()  },
                                   // here we are get value of selected country and passing same value  
                                   //   as input to json method GetStates.  

                                    success:  function  (data)  {
                                            // states contains the JSON formatted list  
                                            // of states passed from the controller  
                                        $("#ddEmpleados").append($('<option></option>').val("").text("Seleccionar..."));
                                        $.each(data, function (i, item) {
                                            $("#ddEmpleados").append($('<option></option>').val(item.Value).text(item.Text));
                                                // here we are adding option for States  

                                            });
                                    },
                                    error:  function  (ex)  {
                                            alert('Failed to retrieve states.'  +  ex);
                                    }
                            });
                            return  false;
            });
                    $("#btnAddEmp").click(function () {
                        var form = $(this).parents("form");
                        var empSelected = form.find("#ddEmpleados");
                        var idEmp = empSelected.val();
                        var nomEmp = empSelected.find(":selected").text();
                        var empresa = form.find("#ddEmpresa :selected").text();

                        var table = $("#tableEmp");
                        var count = table.find("tbody tr").length;
                        var lastIndex = 1;
                        if (count > 0) {
                             lastIndex = table.find("tr:last input[name = 'empleados.Index']").val() + 1;
                        }
                        else {
                            $("#message").hide();
                            table.find("thead").show();
                        }

                        var tableRow = "<tr role='row'>";
                        tableRow += "<td>" + nomEmp + "</td>";
                        tableRow += "<td>" + empresa + "</td>";
                        tableRow += "<td><a title='' class='btn btn-primary btn-xs action deleteLink' data-original-title='Borrar' data-toggle='tooltip' data-placement='top' > <i class='fa fa-fw fa-trash'></i> </a ></td>";
                        tableRow += "<input type='hidden' value = '" + lastIndex + "' name = 'empleados.Index' />";
                        tableRow += "<input type='hidden' value = '" + idEmp + "' name = 'empleados[" + lastIndex + "].email' />";
                        tableRow += "</tr>";

                        table.append(tableRow);

                    });

                    $("body").on("click", ".deleteLink", function () {
                        $(this).tooltip('hide');
                        $(this).parents("tr").remove();
                        var count = $(this).parents("table").find("tbody tr").length;
                        if (count <= 0) {
                            $("#message").show();
                            $("#tableEmp thead").hide();
                        }
                    });
            
        });
    </script>
}
