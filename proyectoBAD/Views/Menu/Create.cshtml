@model proyectoBAD.ViewModels.MenuViewModel

@{
    ViewBag.Title = "Admon. Opciones de Menu";
}

@section customStyles{
    @Styles.Render("~/bundles/switchStyle")
}

<div class="col-md-12">
    @using (Html.BeginForm((String)ViewBag.Action, "Menu", FormMethod.Post, htmlAttributes: new { role = "form", @class = "form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Opción de Menu</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
            @if (ViewBag.Button == "Editar")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6">
                        <p class="form-control-static">
                            @Html.DisplayFor(model => model.id)
                            @Html.HiddenFor(model => model.id)
                        </p>
                    </div>
                </div>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.nombre_opcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nombre_opcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nombre_opcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.super_opcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.super_opcion, Model.superOpciones, "Ninguna",
                   htmlAttributes : new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.super_opcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.controlador, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.controlador, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.controlador, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.accion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.accion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.accion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(model => model.estado, 1, htmlAttributes : new { @class = "form-control switchButton" })
                    @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@ViewBag.Button" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
    <div>
        <a href="@Url.Action("Index", "Menu")" class="btn btn-default">
            <i class="fa fa-fw fa-arrow-left"></i>Volver a la lista de Opciones de Menu
        </a>
    </div>
</div>
@section customScripts{
    @Scripts.Render("~/bundles/formValidationScripts")
    @Scripts.Render("~/bundles/switch")
    <script type="text/javascript">
        $(document).ready(function () {

            $(".switchButton").bootstrapSwitch({
                onText: "Activo",
                offText : "Inactivo"
            });
        })
    </script>
}
